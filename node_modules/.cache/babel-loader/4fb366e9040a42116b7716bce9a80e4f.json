{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\xxsno\\\\Documents\\\\WebDevPractice\\\\InfluentialArtists\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\xxsno\\\\Documents\\\\WebDevPractice\\\\InfluentialArtists\\\\src\\\\components\\\\App.jsx\";\n//jshint esversion: 6\nimport React, { useState } from \"react\";\nimport Header from \"./Header\";\nimport Artist from \"./Artist\";\nimport Artists from \"../Artists\";\nimport Sort from \"./Sort\";\nimport Filter from \"./Filter\";\nimport Footer from \"./Footer\";\nimport artistArr from \"../Clicked Artists\";\nimport DisplayedArtist from \"./Displayed Artist\";\n\nfunction App() {\n  const _useState = useState(Artists),\n        _useState2 = _slicedToArray(_useState, 2),\n        artistsDisplay = _useState2[0],\n        setArtistsDisplay = _useState2[1];\n\n  const _useState3 = useState(true),\n        _useState4 = _slicedToArray(_useState3, 2),\n        isArrEmpty = _useState4[0],\n        setIsArrEmpty = _useState4[1];\n\n  let artistIndex = \"\"; // function sortArtists(sortValue) {\n  //   if (sortValue === \"chronological\") {\n  //     setArtistsDisplay(() => {\n  //       return Artists.sort((a, b) => {\n  //         return (parseInt(a.years.substring(0, 4)) - parseInt(b.years.substring(0, 4)));\n  //       });\n  //     });\n  //   }\n  //   if (sortValue === \"alphabetical\") {\n  //     setArtistsDisplay(() => {\n  //       return Artists.sort((a, b) => {\n  //         if (a.name < b.name) {\n  //           return -1;\n  //         }\n  //         if (a.name > b.name) {\n  //           return 1;\n  //         }\n  //         return 0;\n  //       });\n  //     });\n  //   }\n  // }\n\n  function filterArtists(filterName) {\n    const clickedIndex = artistArr.findIndex(p => p === filterName);\n\n    if (artistArr.length >= Artists.length) {\n      artistArr.splice(0, artistArr.length);\n      setIsArrEmpty(true);\n    }\n\n    console.log(artistArr);\n    setArtistsDisplay(() => {\n      if (!artistArr.includes(filterName) && filterName !== \"chronological\" && filterName !== \"alphabetical\") {\n        artistArr.push(filterName);\n        setIsArrEmpty(false);\n        console.log(filterName);\n      } else if (artistArr.includes(filterName)) {\n        if (filterName === artistArr[0]) {\n          for (let i = 0; i < Artists.length; i++) {\n            artistArr.push(Artists[i].artMovement);\n          }\n        }\n\n        artistArr.splice(clickedIndex, 1);\n        console.log(filterName);\n      }\n\n      if (artistArr.length === 0 && filterName === \"chronological\") {\n        console.log(filterName);\n        return Artists.sort((a, b) => {\n          return parseInt(a.years.substring(0, 4)) - parseInt(b.years.substring(0, 4));\n        });\n      }\n\n      if (artistArr.length === 0 && filterName === \"alphabetical\") {\n        console.log(filterName);\n        return Artists.sort((a, b) => {\n          if (a.name < b.name) {\n            return -1;\n          }\n\n          if (a.name > b.name) {\n            return 1;\n          }\n\n          return 0;\n        });\n      }\n\n      if (filterName !== \"chronological\" || filterName !== \"alphabetical\") {\n        return Artists.filter(artist => {\n          return artistArr.includes(artist.artMovement);\n        });\n      }\n    });\n  }\n\n  function handleClickedArtist(clickedArtist) {\n    artistIndex = Artists.findIndex(p => p.name === clickedArtist);\n    console.log(artistIndex);\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"main-content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, React.createElement(DisplayedArtist, {\n    artistImg: Artists[{\n      artistIndex\n    }].artistImg,\n    name: Artists[{\n      artistIndex\n    }].name,\n    years: Artists[{\n      artistIndex\n    }].years,\n    artMovement: Artists[{\n      artistIndex\n    }].artMovement,\n    bio: Artists[{\n      artistIndex\n    }].bio,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"menu box-shadow\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, React.createElement(Sort, {\n    filterArtists: filterArtists,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }), React.createElement(Filter, {\n    filterArtists: filterArtists,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"artists-cards\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, artistsDisplay.map(Artists => {\n    return React.createElement(Artist, {\n      key: Artists.id,\n      artistImg: Artists.artistImg,\n      name: Artists.name,\n      years: Artists.years,\n      handleClickedArtist: handleClickedArtist,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    });\n  }))), React.createElement(Footer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/xxsno/Documents/WebDevPractice/InfluentialArtists/src/components/App.jsx"],"names":["React","useState","Header","Artist","Artists","Sort","Filter","Footer","artistArr","DisplayedArtist","App","artistsDisplay","setArtistsDisplay","isArrEmpty","setIsArrEmpty","artistIndex","filterArtists","filterName","clickedIndex","findIndex","p","length","splice","console","log","includes","push","i","artMovement","sort","a","b","parseInt","years","substring","name","filter","artist","handleClickedArtist","clickedArtist","artistImg","bio","map","id"],"mappings":";;AAAA;AAEA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,OAAOC,eAAP,MAA4B,oBAA5B;;AAEA,SAASC,GAAT,GAAe;AAAA,oBAC+BT,QAAQ,CAACG,OAAD,CADvC;AAAA;AAAA,QACNO,cADM;AAAA,QACUC,iBADV;;AAAA,qBAEuBX,QAAQ,CAAC,IAAD,CAF/B;AAAA;AAAA,QAENY,UAFM;AAAA,QAEMC,aAFN;;AAGb,MAAIC,WAAW,GAAG,EAAlB,CAHa,CAKb;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,WAASC,aAAT,CAAuBC,UAAvB,EAAmC;AACjC,UAAMC,YAAY,GAAGV,SAAS,CAACW,SAAV,CAAoBC,CAAC,IAAIA,CAAC,KAAKH,UAA/B,CAArB;;AAEA,QAAIT,SAAS,CAACa,MAAV,IAAoBjB,OAAO,CAACiB,MAAhC,EAAwC;AACtCb,MAAAA,SAAS,CAACc,MAAV,CAAiB,CAAjB,EAAoBd,SAAS,CAACa,MAA9B;AACAP,MAAAA,aAAa,CAAC,IAAD,CAAb;AACD;;AAEDS,IAAAA,OAAO,CAACC,GAAR,CAAYhB,SAAZ;AAECI,IAAAA,iBAAiB,CAAC,MAAM;AACvB,UAAI,CAACJ,SAAS,CAACiB,QAAV,CAAmBR,UAAnB,CAAD,IAAmCA,UAAU,KAAK,eAAlD,IAAqEA,UAAU,KAAK,cAAxF,EAAwG;AACtGT,QAAAA,SAAS,CAACkB,IAAV,CAAeT,UAAf;AACAH,QAAAA,aAAa,CAAC,KAAD,CAAb;AACAS,QAAAA,OAAO,CAACC,GAAR,CAAYP,UAAZ;AACA,OAJF,MAIQ,IAAIT,SAAS,CAACiB,QAAV,CAAmBR,UAAnB,CAAJ,EAAoC;AACxC,YAAIA,UAAU,KAAKT,SAAS,CAAC,CAAD,CAA5B,EAAiC;AAC/B,eAAI,IAAImB,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGvB,OAAO,CAACiB,MAA3B,EAAmCM,CAAC,EAApC,EAAuC;AACrCnB,YAAAA,SAAS,CAACkB,IAAV,CAAetB,OAAO,CAACuB,CAAD,CAAP,CAAWC,WAA1B;AACD;AACF;;AACDpB,QAAAA,SAAS,CAACc,MAAV,CAAiBJ,YAAjB,EAA+B,CAA/B;AACAK,QAAAA,OAAO,CAACC,GAAR,CAAYP,UAAZ;AACF;;AAED,UAAIT,SAAS,CAACa,MAAV,KAAqB,CAArB,IAA0BJ,UAAU,KAAK,eAA7C,EAA8D;AAC3DM,QAAAA,OAAO,CAACC,GAAR,CAAYP,UAAZ;AACA,eAAOb,OAAO,CAACyB,IAAR,CAAa,CAACC,CAAD,EAAIC,CAAJ,KAAU;AAC5B,iBAAQC,QAAQ,CAACF,CAAC,CAACG,KAAF,CAAQC,SAAR,CAAkB,CAAlB,EAAqB,CAArB,CAAD,CAAR,GAAoCF,QAAQ,CAACD,CAAC,CAACE,KAAF,CAAQC,SAAR,CAAkB,CAAlB,EAAqB,CAArB,CAAD,CAApD;AACH,SAFQ,CAAP;AAGF;;AACD,UAAI1B,SAAS,CAACa,MAAV,KAAqB,CAArB,IAA0BJ,UAAU,KAAK,cAA7C,EAA6D;AAC1DM,QAAAA,OAAO,CAACC,GAAR,CAAYP,UAAZ;AACA,eAAOb,OAAO,CAACyB,IAAR,CAAa,CAACC,CAAD,EAAIC,CAAJ,KAAU;AAC5B,cAAID,CAAC,CAACK,IAAF,GAASJ,CAAC,CAACI,IAAf,EAAqB;AACnB,mBAAO,CAAC,CAAR;AACD;;AACD,cAAIL,CAAC,CAACK,IAAF,GAASJ,CAAC,CAACI,IAAf,EAAqB;AACnB,mBAAO,CAAP;AACD;;AACD,iBAAO,CAAP;AACD,SARM,CAAP;AAUF;;AAED,UAAIlB,UAAU,KAAK,eAAf,IAAkCA,UAAU,KAAK,cAArD,EAAqE;AACpE,eAAOb,OAAO,CAACgC,MAAR,CAAgBC,MAAD,IAAY;AAChC,iBAAO7B,SAAS,CAACiB,QAAV,CAAmBY,MAAM,CAACT,WAA1B,CAAP;AACD,SAFM,CAAP;AAGA;AAEH,KAzCiB,CAAjB;AA0CF;;AAED,WAASU,mBAAT,CAA8BC,aAA9B,EAA6C;AAC3CxB,IAAAA,WAAW,GAAGX,OAAO,CAACe,SAAR,CAAkBC,CAAC,IAAIA,CAAC,CAACe,IAAF,KAAWI,aAAlC,CAAd;AACAhB,IAAAA,OAAO,CAACC,GAAR,CAAYT,WAAZ;AACD;;AAED,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAGE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,eAAD;AACE,IAAA,SAAS,EAAIX,OAAO,CAAC;AAACW,MAAAA;AAAD,KAAD,CAAP,CAAuByB,SADtC;AAEE,IAAA,IAAI,EAAIpC,OAAO,CAAC;AAACW,MAAAA;AAAD,KAAD,CAAP,CAAuBoB,IAFjC;AAGE,IAAA,KAAK,EAAI/B,OAAO,CAAC;AAACW,MAAAA;AAAD,KAAD,CAAP,CAAuBkB,KAHlC;AAIE,IAAA,WAAW,EAAI7B,OAAO,CAAC;AAACW,MAAAA;AAAD,KAAD,CAAP,CAAuBa,WAJxC;AAKE,IAAA,GAAG,EAAIxB,OAAO,CAAC;AAACW,MAAAA;AAAD,KAAD,CAAP,CAAuB0B,GALhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EASE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,aAAa,EAAIzB,aAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,MAAD;AAAQ,IAAA,aAAa,EAAIA,aAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CATF,EAcI;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,cAAc,CAAC+B,GAAf,CAAmBtC,OAAO,IAAI;AAC3B,WACE,oBAAC,MAAD;AACE,MAAA,GAAG,EAAIA,OAAO,CAACuC,EADjB;AAEE,MAAA,SAAS,EAAIvC,OAAO,CAACoC,SAFvB;AAGE,MAAA,IAAI,EAAIpC,OAAO,CAAC+B,IAHlB;AAIE,MAAA,KAAK,EAAI/B,OAAO,CAAC6B,KAJnB;AAKE,MAAA,mBAAmB,EAAIK,mBALzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AASD,GAVF,CADH,CAdJ,CAHF,EAiCE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjCF,CADF;AAqCD;;AAED,eAAe5B,GAAf","sourcesContent":["//jshint esversion: 6\r\n\r\nimport React, {useState} from \"react\";\r\nimport Header from \"./Header\";\r\nimport Artist from \"./Artist\";\r\nimport Artists from \"../Artists\";\r\nimport Sort from \"./Sort\";\r\nimport Filter from \"./Filter\";\r\nimport Footer from \"./Footer\";\r\nimport artistArr from \"../Clicked Artists\";\r\nimport DisplayedArtist from \"./Displayed Artist\";\r\n\r\nfunction App() {\r\n  const [artistsDisplay, setArtistsDisplay] = useState(Artists);\r\n  const [isArrEmpty, setIsArrEmpty] = useState(true);\r\n  let artistIndex = \"\";\r\n  \r\n  // function sortArtists(sortValue) {\r\n\r\n  //   if (sortValue === \"chronological\") {\r\n  //     setArtistsDisplay(() => {\r\n  //       return Artists.sort((a, b) => {\r\n  //         return (parseInt(a.years.substring(0, 4)) - parseInt(b.years.substring(0, 4)));\r\n  //       });\r\n  //     });\r\n  //   }\r\n  //   if (sortValue === \"alphabetical\") {\r\n  //     setArtistsDisplay(() => {\r\n  //       return Artists.sort((a, b) => {\r\n  //         if (a.name < b.name) {\r\n  //           return -1;\r\n  //         }\r\n  //         if (a.name > b.name) {\r\n  //           return 1;\r\n  //         }\r\n  //         return 0;\r\n  //       });\r\n  //     });\r\n  //   }\r\n  // }\r\n  \r\n  function filterArtists(filterName) {\r\n    const clickedIndex = artistArr.findIndex(p => p === filterName);\r\n  \r\n    if (artistArr.length >= Artists.length) {\r\n      artistArr.splice(0, artistArr.length);\r\n      setIsArrEmpty(true);\r\n    } \r\n\r\n    console.log(artistArr);\r\n\r\n     setArtistsDisplay(() => {\r\n      if (!artistArr.includes(filterName) && filterName !== \"chronological\" && filterName !== \"alphabetical\") {\r\n        artistArr.push(filterName);\r\n        setIsArrEmpty(false);\r\n        console.log(filterName);\r\n       } else if (artistArr.includes(filterName)) { \r\n          if (filterName === artistArr[0]) {\r\n            for(let i = 0; i < Artists.length; i++){\r\n              artistArr.push(Artists[i].artMovement)\r\n            }\r\n          }\r\n          artistArr.splice(clickedIndex, 1);\r\n          console.log(filterName);\r\n       }\r\n\r\n       if (artistArr.length === 0 && filterName === \"chronological\") {\r\n          console.log(filterName);\r\n          return Artists.sort((a, b) => {\r\n            return (parseInt(a.years.substring(0, 4)) - parseInt(b.years.substring(0, 4)));\r\n        });\r\n       }\r\n       if (artistArr.length === 0 && filterName === \"alphabetical\") {\r\n          console.log(filterName);\r\n          return Artists.sort((a, b) => {\r\n            if (a.name < b.name) {\r\n              return -1;\r\n            }\r\n            if (a.name > b.name) {\r\n              return 1;\r\n            }\r\n            return 0;\r\n          });\r\n          \r\n       }\r\n\r\n       if (filterName !== \"chronological\" || filterName !== \"alphabetical\") {\r\n        return Artists.filter((artist) => {\r\n          return artistArr.includes(artist.artMovement);\r\n        });   \r\n       }\r\n       \r\n    });\r\n  }\r\n\r\n  function handleClickedArtist (clickedArtist) {\r\n    artistIndex = Artists.findIndex(p => p.name === clickedArtist);\r\n    console.log(artistIndex);\r\n  }\r\n\r\n  return ( \r\n    <div>\r\n      <Header/>\r\n      \r\n      <div className=\"main-content\">\r\n        <DisplayedArtist\r\n          artistImg = {Artists[{artistIndex}].artistImg}\r\n          name = {Artists[{artistIndex}].name}\r\n          years = {Artists[{artistIndex}].years}\r\n          artMovement = {Artists[{artistIndex}].artMovement}\r\n          bio = {Artists[{artistIndex}].bio}\r\n        />\r\n\r\n        <div className=\"menu box-shadow\">\r\n          <Sort filterArtists = {filterArtists}/>\r\n          <Filter filterArtists = {filterArtists}/>\r\n        </div>\r\n          \r\n          <div className=\"artists-cards\">\r\n            {artistsDisplay.map(Artists => {\r\n                return ( \r\n                  <Artist\r\n                    key = {Artists.id}\r\n                    artistImg = {Artists.artistImg}\r\n                    name = {Artists.name}\r\n                    years = {Artists.years}\r\n                    handleClickedArtist = {handleClickedArtist}\r\n                  />\r\n                );\r\n              })\r\n            }\r\n          </div>\r\n        \r\n      </div>\r\n      <Footer/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}